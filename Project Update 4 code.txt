
function sysCall_threadmain()
    jointHandles={-1,-1,-1,-1,-1,-1}
    for i=1,6,1 do
        jointHandles[i]=sim.getObjectHandle('UR3_joint'..i)
    end

    -- Set-up some of the RML vectors:
    vel=180                 --set velocity
    accel=40                --set acceleration
    jerk=80                 --set jerk
    currentVel={0,0,0,0,0,0,0}      --starting vel and accel
    currentAccel={0,0,0,0,0,0,0}
    d2r = math.pi/180               --constant for degree to radians
    --144.40, -70.9, 81.25, -100.80, -89.70, 0]
    maxVel={vel*math.pi/180,vel*math.pi/180,vel*math.pi/180,vel*math.pi/180,vel*math.pi/180,vel*math.pi/180}
    maxAccel={accel*math.pi/180,accel*math.pi/180,accel*math.pi/180,accel*math.pi/180,accel*math.pi/180,accel*math.pi/180}
    maxJerk={jerk*math.pi/180,jerk*math.pi/180,jerk*math.pi/180,jerk*math.pi/180,jerk*math.pi/180,jerk*math.pi/180}
    targetVel={0,0,0,0,0,0}
    number = 9
    if number == 1 then
        --This section goes position, move, succ, move, unsucc
        --Start Cup 1
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        targetPos2={d2r*155,d2r*(40),d2r*70,d2r*(-25),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos3={d2r*50,d2r*(50),d2r*20,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos3,targetVel)
        targetPos4={d2r*50,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos4,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 1
        base={d2r*0,d2r*(0),d2r*0,d2r*(0),d2r*(0),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,base,targetVel)
    end
    if number == 2 then
        --Start Cup 1
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        targetPos2={d2r*155,d2r*(40),d2r*70,d2r*(-25),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos3={d2r*50,d2r*(50),d2r*20,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos3,targetVel)
        targetPos4={d2r*50,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos4,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 1
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 2
        targetPos5={d2r*170,d2r*(40),d2r*70,d2r*(-25),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos5,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos6={d2r*59,d2r*(50),d2r*20,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos6,targetVel)
        targetPos7={d2r*59,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos7,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 2
        base={d2r*0,d2r*(0),d2r*0,d2r*(0),d2r*(0),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,base,targetVel)
    end
    if number == 3 then
        --Start Cup 1
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        targetPos2={d2r*155,d2r*(40),d2r*70,d2r*(-25),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos3={d2r*50,d2r*(50),d2r*20,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos3,targetVel)
        targetPos4={d2r*50,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos4,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 1
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 2
        targetPos5={d2r*170,d2r*(40),d2r*70,d2r*(-25),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos5,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos6={d2r*59,d2r*(50),d2r*20,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos6,targetVel)
        targetPos7={d2r*59,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos7,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 2
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 3
        targetPos13={d2r*185,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}--140 55 35 0 270 0
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos13,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos14={d2r*70,d2r*(55),d2r*25,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos14,targetVel)
        targetPos15={d2r*70,d2r*(55),d2r*40,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos15,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 3
        base={d2r*0,d2r*(0),d2r*0,d2r*(0),d2r*(0),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,base,targetVel)
    end
    if number == 4 then
        --Start Cup 1
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        targetPos2={d2r*155,d2r*(40),d2r*70,d2r*(-25),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos3={d2r*50,d2r*(50),d2r*20,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos3,targetVel)
        targetPos4={d2r*50,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos4,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 1
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 2
        targetPos5={d2r*170,d2r*(40),d2r*70,d2r*(-25),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos5,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos6={d2r*59,d2r*(50),d2r*20,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos6,targetVel)
        targetPos7={d2r*59,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos7,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 2
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 3
        targetPos13={d2r*185,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}--140 55 35 0 270 0
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos13,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos14={d2r*70,d2r*(55),d2r*25,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos14,targetVel)
        targetPos15={d2r*70,d2r*(55),d2r*40,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos15,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --End Cup 3
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 4
        targetPos2={d2r*200,d2r*(65),d2r*23,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*55,d2r*(20),d2r*80,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*55,d2r*(30),d2r*80,d2r*(-20),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 4
        base={d2r*0,d2r*(0),d2r*0,d2r*(0),d2r*(0),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,base,targetVel)
    end
    if number == 5 then
        --Start Cup 1
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        targetPos2={d2r*155,d2r*(40),d2r*70,d2r*(-25),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos3={d2r*50,d2r*(50),d2r*20,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos3,targetVel)
        targetPos4={d2r*50,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos4,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 1
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 2
        targetPos5={d2r*170,d2r*(40),d2r*70,d2r*(-25),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos5,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos6={d2r*59,d2r*(50),d2r*20,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos6,targetVel)
        targetPos7={d2r*59,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos7,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 2
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 3
        targetPos13={d2r*185,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}--140 55 35 0 270 0
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos13,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos14={d2r*70,d2r*(55),d2r*25,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos14,targetVel)
        targetPos15={d2r*70,d2r*(55),d2r*40,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos15,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --End Cup 3
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 4
        targetPos2={d2r*200,d2r*(65),d2r*23,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*55,d2r*(20),d2r*80,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*55,d2r*(30),d2r*80,d2r*(-20),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 4
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 5
        targetPos2={d2r*162,d2r*(14),d2r*107,d2r*(-27),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*64,d2r*(20),d2r*80,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*64,d2r*(35),d2r*74,d2r*(-20),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 5
        base={d2r*0,d2r*(0),d2r*0,d2r*(0),d2r*(0),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,base,targetVel)
    end
    if number == 6 then
        --Start Cup 1
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        targetPos2={d2r*155,d2r*(40),d2r*70,d2r*(-25),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos3={d2r*50,d2r*(50),d2r*20,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos3,targetVel)
        targetPos4={d2r*50,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos4,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 1
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 2
        targetPos5={d2r*170,d2r*(40),d2r*70,d2r*(-25),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos5,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos6={d2r*59,d2r*(50),d2r*20,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos6,targetVel)
        targetPos7={d2r*59,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos7,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 2
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 3
        targetPos13={d2r*185,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}--140 55 35 0 270 0
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos13,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos14={d2r*70,d2r*(55),d2r*25,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos14,targetVel)
        targetPos15={d2r*70,d2r*(55),d2r*40,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos15,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --End Cup 3
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 4
        targetPos2={d2r*200,d2r*(65),d2r*23,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*55,d2r*(20),d2r*80,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*55,d2r*(30),d2r*80,d2r*(-20),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 4
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 5
        targetPos2={d2r*162,d2r*(14),d2r*107,d2r*(-27),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*64,d2r*(20),d2r*80,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*64,d2r*(35),d2r*74,d2r*(-20),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 5
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 6
        targetPos5={d2r*185,d2r*(15),d2r*107,d2r*(-29),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos5,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*58,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*58,d2r*(8),d2r*110,d2r*(-30),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 6
        base={d2r*0,d2r*(0),d2r*0,d2r*(0),d2r*(0),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,base,targetVel)
    end
    if number == 7 then
        --Start Cup 1
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        targetPos2={d2r*155,d2r*(40),d2r*70,d2r*(-25),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos3={d2r*50,d2r*(50),d2r*20,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos3,targetVel)
        targetPos4={d2r*50,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos4,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 1
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 2
        targetPos5={d2r*170,d2r*(40),d2r*70,d2r*(-25),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos5,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos6={d2r*59,d2r*(50),d2r*20,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos6,targetVel)
        targetPos7={d2r*59,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos7,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 2
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 3
        targetPos13={d2r*185,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}--140 55 35 0 270 0
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos13,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos14={d2r*70,d2r*(55),d2r*25,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos14,targetVel)
        targetPos15={d2r*70,d2r*(55),d2r*40,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos15,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --End Cup 3
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 4
        targetPos2={d2r*200,d2r*(65),d2r*23,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*55,d2r*(20),d2r*80,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*55,d2r*(30),d2r*80,d2r*(-20),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 4
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 5
        targetPos2={d2r*162,d2r*(14),d2r*107,d2r*(-27),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*64,d2r*(20),d2r*80,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*64,d2r*(35),d2r*74,d2r*(-20),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 5
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 6
        targetPos5={d2r*185,d2r*(15),d2r*107,d2r*(-29),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos5,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*58,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*58,d2r*(8),d2r*110,d2r*(-30),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 6
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 7
        targetPos20={d2r*205,d2r*(29),d2r*90,d2r*(-30),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos20,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos9={d2r*53,d2r*(50),d2r*20,d2r*(-90),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos9,targetVel)
        targetPos10={d2r*53,d2r*(40),d2r*35,d2r*(15),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos10,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 7
        base={d2r*0,d2r*(0),d2r*0,d2r*(0),d2r*(0),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,base,targetVel)
    end
    if number ==8 then
        --Start Cup 1
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        targetPos2={d2r*155,d2r*(40),d2r*70,d2r*(-25),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos3={d2r*50,d2r*(50),d2r*20,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos3,targetVel)
        targetPos4={d2r*50,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos4,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 1
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 2
        targetPos5={d2r*170,d2r*(40),d2r*70,d2r*(-25),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos5,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos6={d2r*59,d2r*(50),d2r*20,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos6,targetVel)
        targetPos7={d2r*59,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos7,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 2
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 3
        targetPos13={d2r*185,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}--140 55 35 0 270 0
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos13,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos14={d2r*70,d2r*(55),d2r*25,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos14,targetVel)
        targetPos15={d2r*70,d2r*(55),d2r*40,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos15,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --End Cup 3
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 4
        targetPos2={d2r*200,d2r*(65),d2r*23,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*55,d2r*(20),d2r*80,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*55,d2r*(30),d2r*80,d2r*(-20),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 4
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 5
        targetPos2={d2r*162,d2r*(14),d2r*107,d2r*(-27),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*64,d2r*(20),d2r*80,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*64,d2r*(35),d2r*74,d2r*(-20),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 5
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 6
        targetPos5={d2r*185,d2r*(15),d2r*107,d2r*(-29),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos5,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*58,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*58,d2r*(8),d2r*110,d2r*(-30),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 6
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 7
        targetPos20={d2r*205,d2r*(29),d2r*90,d2r*(-30),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos20,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos9={d2r*53,d2r*(50),d2r*20,d2r*(-90),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos9,targetVel)
        targetPos10={d2r*53,d2r*(40),d2r*35,d2r*(15),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos10,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 7
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 8
        targetPos17={d2r*217,d2r*(13),d2r*110,d2r*(-30),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos17,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*65,d2r*(50),d2r*20,d2r*(-90),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*65,d2r*(43),d2r*30,d2r*(10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 8
        base={d2r*0,d2r*(0),d2r*0,d2r*(0),d2r*(0),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,base,targetVel)
    end
    if number == 9 then
        --Start Cup 1
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        targetPos2={d2r*155,d2r*(40),d2r*70,d2r*(-25),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos3={d2r*50,d2r*(50),d2r*20,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos3,targetVel)
        targetPos4={d2r*50,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos4,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 1
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 2
        targetPos5={d2r*170,d2r*(40),d2r*70,d2r*(-25),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos5,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos6={d2r*59,d2r*(50),d2r*20,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos6,targetVel)
        targetPos7={d2r*59,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos7,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 2
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 3
        targetPos13={d2r*185,d2r*(50),d2r*50,d2r*(-10),d2r*(270),0}--140 55 35 0 270 0
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos13,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos14={d2r*70,d2r*(55),d2r*25,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos14,targetVel)
        targetPos15={d2r*70,d2r*(55),d2r*40,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos15,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --End Cup 3
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 4
        targetPos2={d2r*200,d2r*(65),d2r*23,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*55,d2r*(20),d2r*80,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*55,d2r*(30),d2r*80,d2r*(-20),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 4
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 5
        targetPos2={d2r*162,d2r*(14),d2r*107,d2r*(-27),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos2,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*64,d2r*(20),d2r*80,d2r*(-10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*64,d2r*(35),d2r*74,d2r*(-20),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 5
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 6
        targetPos5={d2r*185,d2r*(15),d2r*107,d2r*(-29),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos5,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*58,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*58,d2r*(8),d2r*110,d2r*(-30),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 6
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 7
        targetPos20={d2r*205,d2r*(29),d2r*90,d2r*(-30),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos20,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos9={d2r*53,d2r*(50),d2r*20,d2r*(-90),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos9,targetVel)
        targetPos10={d2r*53,d2r*(40),d2r*35,d2r*(15),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos10,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 7
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel)
        --Start Cup 8
        targetPos17={d2r*217,d2r*(13),d2r*110,d2r*(-30),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos17,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*65,d2r*(50),d2r*20,d2r*(-90),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*65,d2r*(43),d2r*30,d2r*(10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 8
        targetPos1={d2r*140,d2r*(0),d2r*90,d2r*(0),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos1,targetVel) 
        --Start Cup 9
        targetPos17={d2r*192,d2r*(-17),d2r*139,d2r*(-30),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos17,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',1)
        targetPos18={d2r*58,d2r*(10),d2r*70,d2r*(10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos18,targetVel)
        targetPos19={d2r*58,d2r*(20),d2r*60,d2r*(10),d2r*(270),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,targetPos19,targetVel)
        sim.setIntegerSignal('BaxterVacuumCup_active',0)
        --End Cup 9
        base={d2r*0,d2r*(0),d2r*0,d2r*(0),d2r*(0),0}
        sim.rmlMoveToJointPositions(jointHandles,-1,currentVel,currentAccel,maxVel,maxAccel,maxJerk,base,targetVel)
    end
end
